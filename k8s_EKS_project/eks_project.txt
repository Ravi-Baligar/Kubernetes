ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ eksctl delete cluster --name demo-cluster --region us-east-1
2025-07-13 12:18:36 [ℹ]  deleting EKS cluster "demo-cluster"
2025-07-13 12:18:39 [ℹ]  deleting Fargate profile "fp-default"
2025-07-13 12:20:50 [ℹ]  deleted Fargate profile "fp-default"
2025-07-13 12:20:50 [ℹ]  deleted 1 Fargate profile(s)
2025-07-13 12:20:55 [✔]  kubeconfig has been updated
2025-07-13 12:20:55 [ℹ]  cleaning up AWS load balancers created by Kubernetes objects of Kind Service or Ingress
2025-07-13 12:21:01 [ℹ]  1 task: { delete cluster control plane "demo-cluster" [async] }
2025-07-13 12:21:01 [ℹ]  will delete stack "eksctl-demo-cluster-cluster"
2025-07-13 12:21:03 [✔]  all cluster resources were deleted
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ eksctl create cluster --name demo-cluster --region us-east-1 --fargate
2025-07-13 12:54:54 [ℹ]  eksctl version 0.210.0
2025-07-13 12:54:54 [ℹ]  using region us-east-1
2025-07-13 12:54:55 [ℹ]  setting availability zones to [us-east-1c us-east-1d]
2025-07-13 12:54:55 [ℹ]  subnets for us-east-1c - public:192.168.0.0/19 private:192.168.64.0/19
2025-07-13 12:54:55 [ℹ]  subnets for us-east-1d - public:192.168.32.0/19 private:192.168.96.0/19
2025-07-13 12:54:55 [ℹ]  using Kubernetes version 1.32
2025-07-13 12:54:55 [ℹ]  creating EKS cluster "demo-cluster" in "us-east-1" region with Fargate profile
2025-07-13 12:54:55 [ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=us-east-1 --cluster=demo-cluster'
2025-07-13 12:54:55 [ℹ]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster "demo-cluster" in "us-east-1"
2025-07-13 12:54:55 [ℹ]  CloudWatch logging will not be enabled for cluster "demo-cluster" in "us-east-1"
2025-07-13 12:54:55 [ℹ]  you can enable it with 'eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=us-east-1 --cluster=demo-cluster'
2025-07-13 12:54:55 [ℹ]  default addons coredns, metrics-server, vpc-cni, kube-proxy were not specified, will install them as EKS addons
2025-07-13 12:54:55 [ℹ]  
2 sequential tasks: { create cluster control plane "demo-cluster", 
    3 sequential sub-tasks: { 
        1 task: { create addons },
        wait for control plane to become ready,
        create fargate profiles,
    } 
}
2025-07-13 12:54:55 [ℹ]  building cluster stack "eksctl-demo-cluster-cluster"
2025-07-13 12:54:58 [ℹ]  deploying stack "eksctl-demo-cluster-cluster"
2025-07-13 12:55:28 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 12:55:59 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 12:57:01 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 12:58:02 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 12:59:04 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 13:00:05 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 13:01:07 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 13:02:09 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 13:03:10 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 13:04:12 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-cluster"
2025-07-13 13:04:18 [ℹ]  creating addon: coredns
2025-07-13 13:04:19 [ℹ]  successfully created addon: coredns
2025-07-13 13:04:20 [ℹ]  creating addon: metrics-server
2025-07-13 13:04:21 [ℹ]  successfully created addon: metrics-server
2025-07-13 13:04:22 [!]  recommended policies were found for "vpc-cni" addon, but since OIDC is disabled on the cluster, eksctl cannot configure the requested permissions; the recommended way to provide IAM permissions for "vpc-cni" addon is via pod identity associations; after addon creation is completed, add all recommended policies to the config file, under `addon.PodIdentityAssociations`, and run `eksctl update addon`
2025-07-13 13:04:22 [ℹ]  creating addon: vpc-cni
2025-07-13 13:04:23 [ℹ]  successfully created addon: vpc-cni
2025-07-13 13:04:23 [ℹ]  creating addon: kube-proxy
2025-07-13 13:04:24 [ℹ]  successfully created addon: kube-proxy
2025-07-13 13:06:29 [ℹ]  creating Fargate profile "fp-default" on EKS cluster "demo-cluster"
2025-07-13 13:08:41 [ℹ]  created Fargate profile "fp-default" on EKS cluster "demo-cluster"
2025-07-13 13:09:13 [ℹ]  "coredns" is now schedulable onto Fargate
2025-07-13 13:10:21 [ℹ]  "coredns" is now scheduled onto Fargate
2025-07-13 13:10:22 [ℹ]  "coredns" pods are now scheduled onto Fargate
2025-07-13 13:10:22 [ℹ]  waiting for the control plane to become ready
2025-07-13 13:10:22 [✔]  saved kubeconfig as "/home/ravi/.kube/config"
2025-07-13 13:10:22 [ℹ]  no tasks
2025-07-13 13:10:22 [✔]  all EKS cluster resources for "demo-cluster" have been created
2025-07-13 13:10:25 [ℹ]  kubectl command should work with "/home/ravi/.kube/config", try 'kubectl get nodes'
2025-07-13 13:10:25 [✔]  EKS cluster "demo-cluster" in "us-east-1" region is ready
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ aws eks update-kubeconfig --name demo-cluster
Updated context arn:aws:eks:us-east-1:430118839404:cluster/demo-cluster in /home/ravi/.kube/config
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ eksctl create fargateprofile \
    --cluster demo-cluster \
    --region us-east-1 \
    --name alb-sample-app \
    --namespace game-2048
2025-07-13 13:14:12 [ℹ]  creating Fargate profile "alb-sample-app" on EKS cluster "demo-cluster"
2025-07-13 13:15:20 [ℹ]  created Fargate profile "alb-sample-app" on EKS cluster "demo-cluster"
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/examples/2048/2048_full.yaml
namespace/game-2048 created
deployment.apps/deployment-2048 created
service/service-2048 created
ingress.networking.k8s.io/ingress-2048 created
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ kubectl get pods -n game-2048
NAME                              READY   STATUS    RESTARTS   AGE
deployment-2048-bdbddc878-4hg2l   1/1     Running   0          53s
deployment-2048-bdbddc878-765xf   1/1     Running   0          53s
deployment-2048-bdbddc878-bdwb7   1/1     Running   0          53s
deployment-2048-bdbddc878-p4v6m   1/1     Running   0          53s
deployment-2048-bdbddc878-x7ksj   1/1     Running   0          53s
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ kubectl get all -n game-2048
NAME                                  READY   STATUS    RESTARTS   AGE
pod/deployment-2048-bdbddc878-4hg2l   1/1     Running   0          79s
pod/deployment-2048-bdbddc878-765xf   1/1     Running   0          79s
pod/deployment-2048-bdbddc878-bdwb7   1/1     Running   0          79s
pod/deployment-2048-bdbddc878-p4v6m   1/1     Running   0          79s
pod/deployment-2048-bdbddc878-x7ksj   1/1     Running   0          79s

NAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
service/service-2048   NodePort   10.100.39.137   <none>        80:32495/TCP   79s

NAME                              READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/deployment-2048   5/5     5            5           80s

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/deployment-2048-bdbddc878   5         5         5       81s
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ export cluster_name=demo-cluster
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5) 
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4\n
cut: invalid field value ‘n’
Try 'cut --help' for more information.
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ eksctl utils associate-iam-oidc-provider --cluster demo-cluster --approve
2025-07-13 13:24:10 [ℹ]  will create IAM Open ID Connect provider for cluster "demo-cluster" in "us-east-1"
2025-07-13 13:24:12 [✔]  created IAM Open ID Connect provider for cluster "demo-cluster" in "us-east-1"
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.11.0/docs/install/iam_policy.json
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  8759  100  8759    0     0   1629      0  0:00:05  0:00:05 --:--:--  2175
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json
{
    "Policy": {
        "PolicyName": "AWSLoadBalancerControllerIAMPolicy",
        "PolicyId": "ANPAWIJIUURWICNHZW22L",
        "Arn": "arn:aws:iam::430118839404:policy/AWSLoadBalancerControllerIAMPolicy",
        "Path": "/",
        "DefaultVersionId": "v1",
        "AttachmentCount": 0,
        "PermissionsBoundaryUsageCount": 0,
        "IsAttachable": true,
        "CreateDate": "2025-07-13T07:56:20+00:00",
        "UpdateDate": "2025-07-13T07:56:20+00:00"
    }
}
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ eksctl create iamserviceaccount \
  --cluster=<your-cluster-name> \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name AmazonEKSLoadBalancerControllerRole \
  --attach-policy-arn=arn:aws:iam::430118839404:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve
bash: your-cluster-name: No such file or directory
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ eksctl create iamserviceaccount   --cluster=demo-cluster   --namespace=kube-system   --name=aws-load-balancer-controller   --role-name AmazonEKSLoadBalancerControllerRole   --attach-policy-arn=arn:aws:iam::430118839404:policy/AWSLoadBalancerControllerIAMPolicy   --approve
2025-07-13 13:28:51 [ℹ]  1 iamserviceaccount (kube-system/aws-load-balancer-controller) was included (based on the include/exclude rules)
2025-07-13 13:28:51 [!]  serviceaccounts that exist in Kubernetes will be excluded, use --override-existing-serviceaccounts to override
2025-07-13 13:28:51 [ℹ]  1 task: { 
    2 sequential sub-tasks: { 
        create IAM role for serviceaccount "kube-system/aws-load-balancer-controller",
        create serviceaccount "kube-system/aws-load-balancer-controller",
    } }2025-07-13 13:28:51 [ℹ]  building iamserviceaccount stack "eksctl-demo-cluster-addon-iamserviceaccount-kube-system-aws-load-balancer-controller"
2025-07-13 13:28:52 [ℹ]  deploying stack "eksctl-demo-cluster-addon-iamserviceaccount-kube-system-aws-load-balancer-controller"
2025-07-13 13:28:52 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-addon-iamserviceaccount-kube-system-aws-load-balancer-controller"
2025-07-13 13:29:23 [ℹ]  waiting for CloudFormation stack "eksctl-demo-cluster-addon-iamserviceaccount-kube-system-aws-load-balancer-controller"
2025-07-13 13:29:25 [ℹ]  created serviceaccount "kube-system/aws-load-balancer-controller"
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ helm repo add eks https://aws.github.io/eks-charts
Traceback (most recent call last):
  File "/usr/lib/command-not-found", line 27, in <module>
    from CommandNotFound.util import crash_guard
ModuleNotFoundError: No module named 'CommandNotFound'
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 11913  100 11913    0     0   2305      0  0:00:05  0:00:05 --:--:--  2730
Downloading https://get.helm.sh/helm-v3.18.4-linux-amd64.tar.gz
Verifying checksum... Done.
Preparing to install helm into /usr/local/bin
[sudo] password for ravi: 
helm installed into /usr/local/bin/helm
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ sudo apt update
sudo apt install curl -y
curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
Hit:1 https://download.docker.com/linux/ubuntu jammy InRelease                                                                                                                         
Hit:2 https://packages.microsoft.com/repos/code stable InRelease                                                                                                                       
Hit:3 http://in.archive.ubuntu.com/ubuntu noble InRelease                                                              
Get:5 http://in.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]                       
Hit:6 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:7 http://in.archive.ubuntu.com/ubuntu noble-backports InRelease                                                                                                                    
Ign:4 https://packages.cloud.google.com/apt kubernetes-xenial InRelease                                                                                                                
Err:8 https://packages.cloud.google.com/apt kubernetes-xenial Release                                                                                                                  
  404  Not Found [IP: 142.251.222.142 443]
Traceback (most recent call last):                                                                                                                                                     
  File "/usr/lib/cnf-update-db", line 3, in <module>
    import apt_pkg
ModuleNotFoundError: No module named 'apt_pkg'
Reading package lists... Done
E: The repository 'https://apt.kubernetes.io kubernetes-xenial Release' does not have a Release file.
N: Updating from such a repository can't be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.
E: Problem executing scripts APT::Update::Post-Invoke-Success 'if /usr/bin/test -w /var/lib/command-not-found/ -a -e /usr/lib/cnf-update-db; then /usr/lib/cnf-update-db > /dev/null; fi'
E: Sub-process returned an error code
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
curl is already the newest version (8.5.0-2ubuntu10.6).
The following packages were automatically installed and are no longer required:
  bridge-utils ubuntu-fan
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 124 not upgraded.
Helm v3.18.4 is already latest
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ helm repo add eks https://aws.github.io/eks-charts
"eks" has been added to your repositories
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ helm repo update eks
Hang tight while we grab the latest from your chart repositories...
...Successfully got an update from the "eks" chart repository
Update Complete. ⎈Happy Helming!⎈
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system \
  --set clusterName=demo-cluster \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=us-east-1 \
  --set vpcId=vpc-0897ae9998817d3ed
NAME: aws-load-balancer-controller
LAST DEPLOYED: Sun Jul 13 13:34:50 2025
NAMESPACE: kube-system
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
AWS Load Balancer controller installed!
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ kubectl get deployment -n kube-system aws-load-balancer-controller
NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
aws-load-balancer-controller   2/2     2            2           2m28s
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ kubectl get all -n game-2048
NAME                                  READY   STATUS    RESTARTS   AGE
pod/deployment-2048-bdbddc878-4hg2l   1/1     Running   0          19m
pod/deployment-2048-bdbddc878-765xf   1/1     Running   0          19m
pod/deployment-2048-bdbddc878-bdwb7   1/1     Running   0          19m
pod/deployment-2048-bdbddc878-p4v6m   1/1     Running   0          19m
pod/deployment-2048-bdbddc878-x7ksj   1/1     Running   0          19m

NAME                   TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
service/service-2048   NodePort   10.100.39.137   <none>        80:32495/TCP   19m

NAME                              READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/deployment-2048   5/5     5            5           19m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/deployment-2048-bdbddc878   5         5         5       19m
ravi@ravi-VirtualBox:~/Documents/kubernetes/k8s_EKS_project$ kubectl get ingress -n game-2048
NAME           CLASS   HOSTS   ADDRESS                                                                  PORTS   AGE
ingress-2048   alb     *       k8s-game2048-ingress2-bcac0b5b37-739956283.us-east-1.elb.amazonaws.com   80      19m